<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1">
  <display-name>Zanata Sync</display-name>

  <!-- Welcome page -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <!--
  Make sure Liquibase is the first listener (after ClassLoaderLeakPreventor),
  so that it can update the database schema before
  anyone uses the database.
   -->

  <context-param>
    <param-name>liquibase.changelog</param-name>
    <param-value>db/db.changelog.xml</param-value>
  </context-param>

  <context-param>
    <param-name>liquibase.datasource</param-name>
    <param-value>${datasource.name}</param-value>
  </context-param>

  <context-param>
    <param-name>liquibase.onerror.fail</param-name>
    <param-value>true</param-value>
  </context-param>

  <!-- listeners -->
  <listener>
    <listener-class>liquibase.integration.servlet.LiquibaseServletListener</listener-class>
  </listener>

  <!--<resource-ref>-->
    <!--<description>My DataSource Reference</description>-->
    <!--<res-ref-name>jdbc/DataSource</res-ref-name>-->
    <!--<res-type>javax.sql.DataSource</res-type>-->
    <!--<res-auth>Container</res-auth>-->
  <!--</resource-ref>-->

  <filter>
    <filter-name>monitoring</filter-name>
    <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>monitoring</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <filter-mapping>
    <filter-name>formAuthenticationFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
    <url-pattern>/</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>authorizationCodeFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
    <url-pattern>/</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>frontendDataProviderFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
    <url-pattern>/</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>net.bull.javamelody.SessionListener</listener-class>
  </listener>

  <!-- - start with a '/' and end with a '/*', use this one for path patterns-->
  <!-- - start with a '*.' and end with a character, use this for extension mapping-->
  <!-- - some sequence of characters starting with '/' and not ending in '*', use this for exact matches.-->

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>CSS and other assets</web-resource-name>
      <url-pattern>/app/*</url-pattern>
      <url-pattern>/favicon.ico</url-pattern>
    </web-resource-collection>
  </security-constraint>

  <security-constraint>
    <web-resource-collection>
      <!-- REST api has its own security checks -->
      <web-resource-name>REST API</web-resource-name>
      <url-pattern>/api/*</url-pattern>
    </web-resource-collection>
  </security-constraint>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Single Page App</web-resource-name>
      <url-pattern>*.jsp</url-pattern>
      <url-pattern>/</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>syncUser</role-name>
    </auth-constraint>
  </security-constraint>



  <security-role>
    <role-name>syncUser</role-name>
  </security-role>

  <login-config>
    <auth-method>FORM</auth-method>
    <form-login-config>
      <form-login-page>/login.jsp</form-login-page>
      <form-error-page>/login.jsp?error=true</form-error-page>
    </form-login-config>
    <realm-name>ApplicationRealm</realm-name>
  </login-config>

  <session-config>
    <cookie-config>
      <!-- so that cookies can not be accessed by javascript-->
      <http-only>true</http-only>
      <!--<secure>true</secure>-->
    </cookie-config>
  </session-config>

</web-app>
