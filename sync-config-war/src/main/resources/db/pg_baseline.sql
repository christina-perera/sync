CREATE TABLE IF NOT EXISTS ZanataAccount (
    id            SERIAL PRIMARY KEY,
    localUsername VARCHAR(255),
    secret        VARCHAR(255),
    server        VARCHAR(255),
    username      VARCHAR(255),
    UNIQUE (server, username)
);

CREATE TABLE IF NOT EXISTS RepoAccount (
    id            SERIAL PRIMARY KEY,
    repoHostname  VARCHAR(255) NOT NULL,
    repoType      VARCHAR(255) NOT NULL,
    secret        VARCHAR(255),
    username      VARCHAR(255),
    zanataAccount BIGINT       NOT NULL REFERENCES ZanataAccount (id),
    UNIQUE (repoHostname, username)
);

CREATE TABLE IF NOT EXISTS Sync_Work_Config_table (
    id                  SERIAL PRIMARY KEY,
    name                VARCHAR(128) NOT NULL,
    description         VARCHAR(255),
    createdDate         TIMESTAMP,
    syncToRepoCron      VARCHAR(255),
    syncToRepoEnabled   BOOLEAN      NOT NULL,
    syncToServerEnabled BOOLEAN      NOT NULL,
    syncToZanataCron    VARCHAR(255),
    syncToZanataOption  VARCHAR(255),
    zanataWebHookSecret VARCHAR(255),
    repoAccount         BIGINT       NOT NULL REFERENCES RepoAccount (id),
    zanataAccount       BIGINT       NOT NULL REFERENCES ZanataAccount (id),
    srcRepoUrl          VARCHAR(255) NOT NULL,
    srcRepoBranch       VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Job_Status_table (
    id            VARCHAR(255) PRIMARY KEY,
    workId        BIGINT      NOT NULL REFERENCES Sync_Work_Config_table (id)
    ON DELETE CASCADE,
    jobType       VARCHAR(20) NOT NULL,
    status        VARCHAR(20) NOT NULL,
    startTime     TIMESTAMP,
    endTime       TIMESTAMP,
    nextStartTime TIMESTAMP
);

CREATE TABLE IF NOT EXISTS System_Settings_table (
    id           SERIAL PRIMARY KEY,
    version      BIGINT      NOT NULL,
    settingKey   VARCHAR(50) NOT NULL UNIQUE,
    settingValue VARCHAR(50) NOT NULL
);

-- generated by default as identity